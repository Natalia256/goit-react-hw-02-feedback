{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","statItem","Notification","message","App","state","handleFeedbackBtnClick","event","innerText","target","setState","prevState","countTotalFeedbacks","Object","values","reduce","countPositiveFeedbackPercentage","positiveFeedbacks","totalFeedbacks","positiveFeedbackPercentage","Math","round","this","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,+B,iBCA7BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,+LCeVC,EAbD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEtB,OACA,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCcUI,EApBO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLR,UAAWC,IAAOQ,OAElBC,QAASL,EAJX,SAMGE,GAHIA,S,gBCiBEI,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGhB,UAAWC,IAAOgB,SAArB,mBAAsCL,KACtC,oBAAGZ,UAAWC,IAAOgB,SAArB,sBAAyCJ,KACzC,oBAAGb,UAAWC,IAAOgB,SAArB,kBAAqCH,KACrC,oBAAGd,UAAWC,IAAOgB,SAArB,oBAAuCF,KACvC,oBAAGf,UAAWC,IAAOgB,SAArB,gCACsBD,EADtB,WCHSE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,4BAAIA,KCqESC,E,4MA/DbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,uBAAyB,SAAAC,GACvB,IAAQC,EAAcD,EAAME,OAApBD,UAER,EAAKE,UAAS,SAAAC,GAAS,sBACpBH,EAAYG,EAAUH,GAAa,O,EAIxCI,oBAAsB,SAAAxB,GAKpB,OAJuByB,OAAOC,OAAO1B,GAAS2B,QAC5C,SAAChB,EAAOR,GAAR,OAAmBQ,EAAQR,M,EAM/ByB,gCAAkC,SAAA5B,GAChC,IAAM6B,EAAoB7B,EAAQQ,KAC5BsB,EAAiB,EAAKN,oBAAoBxB,GAE1C+B,EAA6BD,EAC9BD,EAAoBC,EAAkB,IACvC,EAEJ,OAAOE,KAAKC,MAAMF,I,4CAGpB,WACE,MAA+BG,KAAKjB,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACzB,OACE,qCACA,cAAC,EAAD,CAAShB,MAAM,uBAAf,SACE,cAAC,EAAD,CACEM,QAASyB,OAAOU,KAAKD,KAAKjB,OAC1BhB,gBAAiBiC,KAAKhB,2BAG1B,cAAC,EAAD,CAASxB,MAAM,aAAf,SACGwC,KAAKV,oBAAoBU,KAAKjB,OAC7B,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,KAAKV,oBAAoBU,KAAKjB,OACrCL,mBAAoBsB,KAAKN,gCACvBM,KAAKjB,SAIT,cAAC,EAAD,CAAcF,QAAS,gC,GAxDbqB,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.77f25151.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statItem\":\"Statistics_statItem__2EPWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2RZdP\",\"title\":\"Section_title__1vBw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2Nu14\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n    \r\n    return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>)\r\n  \r\n  }\r\n  \r\n  Section.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n  };\r\n  export default Section;","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {options.map(option => (\r\n      <button\r\n        type=\"button\"\r\n        className={styles.button}\r\n        key={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  export default FeedbackOptions;\r\n  ","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.statItem}>Good: {good}</p>\r\n      <p className={styles.statItem}>Neutral: {neutral}</p>\r\n      <p className={styles.statItem}>Bad: {bad}</p>\r\n      <p className={styles.statItem}>Total: {total}</p>\r\n      <p className={styles.statItem}>\r\n        Positive feedback: {positivePercentage}%\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nconst Notification = ({ message }) => (\r\n  <p>{message}</p>\r\n)\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import './App.css';\nimport React from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedbackBtnClick = event => {\n    const { innerText } = event.target;\n\n    this.setState(prevState => ({\n      [innerText]: prevState[innerText] + 1,\n    }));\n  };\n\n  countTotalFeedbacks = options => {\n    const totalFeedbacks = Object.values(options).reduce(\n      (total, option) => total + option,\n    );\n\n    return totalFeedbacks;\n  };\n\n  countPositiveFeedbackPercentage = options => {\n    const positiveFeedbacks = options.good;\n    const totalFeedbacks = this.countTotalFeedbacks(options);\n\n    const positiveFeedbackPercentage = totalFeedbacks\n      ? (positiveFeedbacks / totalFeedbacks) * 100\n      : 0;\n\n    return Math.round(positiveFeedbackPercentage);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n  return (\n    <>\n    <Section title=\"Please leave fedback\">\n      <FeedbackOptions\n        options={Object.keys(this.state)}\n        onLeaveFeedback={this.handleFeedbackBtnClick}\n      />\n    </Section>\n    <Section title=\"Statistics\">\n      {this.countTotalFeedbacks(this.state) ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedbacks(this.state)}\n          positivePercentage={this.countPositiveFeedbackPercentage(\n            this.state,\n          )}\n        />\n      ) : (\n        <Notification message= 'No feedbacks given'/>\n      )}\n    </Section>\n  </>\n);\n}\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}